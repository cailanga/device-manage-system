<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pzhxy.devicemanager.org.mapper.EmployeeMapper">

    <resultMap id="baseMap" type="employee">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="headImage" property="headImage"/>
        <result column="age" property="age"/>
        <result column="department_id" property="departmentId"/>
        <association property="department" javaType="department">
            <id column="department_id" property="id"/>
            <result column="dname" property="name"/>
        </association>
    </resultMap>
    <sql id="baseSelect">
        select
            d.name dname,
            e.*
        from t_org_employee e
                 left join t_org_department d on d.id = e.department_id
    </sql>
    <insert id="insert" parameterType="employee">
        insert into
            t_org_employee(
                `username`,
                password,
                email,
                headImage,
                age,
                department_id
            )
        values (
                #{username},
                #{password},
                #{email},
                #{headImage},
                #{age},
                #{department.id}
               )
    </insert>
    <update id="update" parameterType="employee">
        update t_org_employee
        set
            `username`=#{username},
            password=#{password},
            email=#{email},
            headImage=#{headImage},
            age=#{age},
            department_id=#{department.id}
        where id = #{id}

    </update>
    <insert id="setEmployeeRole">
        insert into t_auth_employee_role(employee_id,role_id)
        values
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{employeeId},#{roleId})
        </foreach>
    </insert>
    <delete id="deleteById">
        delete from t_org_employee where id = #{id}
    </delete>
    <delete id="batchDelete">
        delete from t_org_employee where id in
            <foreach collection="list" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
    </delete>
    <delete id="deleteEmpRoleByEmployeeId">
        delete from t_auth_employee_role where employee_id = #{employeeId}
    </delete>
    <select id="selectById" resultMap="baseMap">
        <include refid="baseSelect"></include>
            where e.id = #{id}
    </select>
    <select id="selectAll" resultMap="baseMap">
         <include refid="baseSelect"></include>
    </select>
    <sql id="whereKeyWord">
        <where>
            <if test="keyword!=null and keyword!=''">
                and `username` like concat('%',#{keyword},'%')
                or `email` like concat('%',#{keyword},'%')
            </if>
        </where>
    </sql>
    <select id="queryTotal" resultType="java.lang.Long">
        select count(*) from t_org_employee
        <include refid="whereKeyWord"></include>
    </select>
    <select id="queryPageList" resultMap="baseMap">
        <include refid="baseSelect"></include>
        <where>
            <if test="keyword!=null and keyword!=''">
                `username` like concat('%',#{keyword},'%')
                or `email` like concat('%',#{keyword},'%')
                or d.name like concat('%',#{keyword},'%')
            </if>
        </where>
        limit #{start},#{pageSize}
    </select>
    <select id="getEmpRolesByEmployeeId" resultType="java.lang.Long">
        select role_id from t_auth_employee_role where employee_id = #{employeeId}
    </select>
    <select id="selectByUsername" resultType="cn.pzhxy.devicemanager.org.domain.Employee">
        select * from t_org_employee where username = #{username}
    </select>
    <select id="selectSnsByEmployeeId" resultType="java.lang.String">
        select rp.permission_sn
        from t_auth_employee_role er
        left join t_auth_role_permission rp on er.role_id = rp.role_id
        where er.employee_id = #{employeeId}
    </select>
</mapper>